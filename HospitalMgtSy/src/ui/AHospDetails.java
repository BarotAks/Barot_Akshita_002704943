/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package ui;

import java.awt.event.KeyEvent;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import model.DoctorDirectory;
import model.Hospital;
import model.HospitalDirectory;
import model.PatientDirectory;

/**
 *
 * @author akshitabarot
 */
public class AHospDetails extends javax.swing.JFrame {

    /**
     * Creates new form AHospDetails
     */
    
      HospitalDirectory HospDirectory;
      DoctorDirectory DocDirectory;
      PatientDirectory PatDirectory;
      
    public AHospDetails() {
        initComponents();
    }
    
    AHospDetails(DoctorDirectory DocDirectory, HospitalDirectory HospDirectory, PatientDirectory PatDirectory) {
        initComponents();
        this.PatDirectory = PatDirectory;
        this.HospDirectory = HospDirectory;
        this.DocDirectory = DocDirectory;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jHospID = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jNameHosp = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jPhoneNoHosp = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jEmailHosp = new javax.swing.JTextField();
        jSaveHospButton = new javax.swing.JButton();
        jBackAddDoctorButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setLayout(null);

        jLabel3.setFont(new java.awt.Font("Charter", 3, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(204, 0, 0));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("HOSPITAL DETAILS");
        jLabel3.setBorder(javax.swing.BorderFactory.createMatteBorder(3, 3, 3, 3, new java.awt.Color(204, 0, 0)));
        jPanel1.add(jLabel3);
        jLabel3.setBounds(250, 20, 300, 50);

        jLabel5.setFont(new java.awt.Font("Charter", 3, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(204, 0, 0));
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("HOSPITAL ID");
        jLabel5.setBorder(javax.swing.BorderFactory.createMatteBorder(3, 3, 3, 3, new java.awt.Color(204, 0, 0)));
        jPanel1.add(jLabel5);
        jLabel5.setBounds(150, 170, 140, 30);

        jHospID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jHospIDActionPerformed(evt);
            }
        });
        jHospID.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jHospIDKeyReleased(evt);
            }
        });
        jPanel1.add(jHospID);
        jHospID.setBounds(410, 170, 220, 30);

        jLabel2.setFont(new java.awt.Font("Charter", 3, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(204, 0, 0));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("HOSPITAL NAME");
        jLabel2.setBorder(javax.swing.BorderFactory.createMatteBorder(3, 3, 3, 3, new java.awt.Color(204, 0, 0)));
        jPanel1.add(jLabel2);
        jLabel2.setBounds(150, 240, 140, 30);

        jNameHosp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jNameHospActionPerformed(evt);
            }
        });
        jNameHosp.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jNameHospKeyPressed(evt);
            }
        });
        jPanel1.add(jNameHosp);
        jNameHosp.setBounds(410, 240, 220, 30);

        jLabel12.setFont(new java.awt.Font("Charter", 3, 14)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(204, 0, 0));
        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel12.setText("PHONE NUMBER");
        jLabel12.setBorder(javax.swing.BorderFactory.createMatteBorder(3, 3, 3, 3, new java.awt.Color(204, 0, 0)));
        jPanel1.add(jLabel12);
        jLabel12.setBounds(150, 320, 140, 30);

        jPhoneNoHosp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jPhoneNoHospActionPerformed(evt);
            }
        });
        jPhoneNoHosp.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jPhoneNoHospKeyPressed(evt);
            }
        });
        jPanel1.add(jPhoneNoHosp);
        jPhoneNoHosp.setBounds(410, 320, 220, 30);

        jLabel13.setFont(new java.awt.Font("Charter", 3, 14)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(204, 0, 0));
        jLabel13.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel13.setText("EMAIL");
        jLabel13.setBorder(javax.swing.BorderFactory.createMatteBorder(3, 3, 3, 3, new java.awt.Color(204, 0, 0)));
        jPanel1.add(jLabel13);
        jLabel13.setBounds(150, 400, 140, 30);

        jEmailHosp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jEmailHospActionPerformed(evt);
            }
        });
        jPanel1.add(jEmailHosp);
        jEmailHosp.setBounds(410, 400, 220, 30);

        jSaveHospButton.setFont(new java.awt.Font("Charter", 1, 14)); // NOI18N
        jSaveHospButton.setForeground(new java.awt.Color(204, 0, 0));
        jSaveHospButton.setText("SAVE");
        jSaveHospButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jSaveHospButtonMouseClicked(evt);
            }
        });
        jSaveHospButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jSaveHospButtonActionPerformed(evt);
            }
        });
        jPanel1.add(jSaveHospButton);
        jSaveHospButton.setBounds(200, 480, 130, 30);

        jBackAddDoctorButton.setFont(new java.awt.Font("Charter", 1, 14)); // NOI18N
        jBackAddDoctorButton.setForeground(new java.awt.Color(204, 0, 0));
        jBackAddDoctorButton.setText("BACK");
        jBackAddDoctorButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBackAddDoctorButtonActionPerformed(evt);
            }
        });
        jPanel1.add(jBackAddDoctorButton);
        jBackAddDoctorButton.setBounds(430, 480, 130, 30);
        jPanel1.add(jLabel1);
        jLabel1.setBounds(0, 0, 810, 590);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 822, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 598, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jHospIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jHospIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jHospIDActionPerformed

    private void jHospIDKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jHospIDKeyReleased
        // TODO add your handling code here:
//        char c = evt.getKeyChar();
//
//        if(Character.isLetter(c) || Character.isWhitespace(c )|| Character.isISOControl(c)){
//            tfFnameDoc.setEditable(true);
//        } else {
//            tfFnameDoc.setEditable(false);
//        }
    }//GEN-LAST:event_jHospIDKeyReleased

    private void jNameHospActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jNameHospActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jNameHospActionPerformed

    private void jNameHospKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jNameHospKeyPressed
        // TODO add your handling code here:

        char c = evt.getKeyChar();

        if(Character.isLetter(c) || Character.isWhitespace(c )|| Character.isISOControl(c)){
            jNameHosp.setEditable(true);
        } else {
            jNameHosp.setEditable(false);
        }
    }//GEN-LAST:event_jNameHospKeyPressed

    private void jPhoneNoHospActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jPhoneNoHospActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jPhoneNoHospActionPerformed

    private void jPhoneNoHospKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jPhoneNoHospKeyPressed
        // TODO add your handling code here:

        try{
            String cellNumber = jPhoneNoHosp.getText();
            int length = cellNumber.length();
            char c = evt.getKeyChar();

            //checks for number 0 to 9
            if(evt.getKeyChar()>='0' && evt.getKeyChar()<='9'){
                ///checks if length not more than 10 digit
                if(length<10){
                    jPhoneNoHosp.setEditable(true);

                } else{
                    jPhoneNoHosp.setEditable(false);
                }
            }   else{
                if (evt.getExtendedKeyCode()==KeyEvent.VK_BACK_SPACE || evt.getExtendedKeyCode()==KeyEvent.VK_DELETE){
                    jPhoneNoHosp.setEditable(true);
                } else{
                    jPhoneNoHosp.setEditable(false);
                }
            }
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(null,e);
        }

    }//GEN-LAST:event_jPhoneNoHospKeyPressed

    private void jEmailHospActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jEmailHospActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jEmailHospActionPerformed

    private void jSaveHospButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSaveHospButtonMouseClicked
        // TODO add your handling code here:
        
        String hospID = jHospID.getText();
        String hospname = jNameHosp.getText();
        String phoneNohosp = jPhoneNoHosp.getText();
        String emailhosp = jEmailHosp.getText();
        int length = phoneNohosp.length();

        //DocData dd = DocDirectory.addNewDocData();
        if (hospID.isEmpty() || hospname.isEmpty()|| phoneNohosp.isEmpty()|| emailhosp.isEmpty()){
            JOptionPane.showMessageDialog(this,
                "Please enter all fields",
                "Try Again",
                JOptionPane.ERROR_MESSAGE);

        }
        else if(length<10){
            JOptionPane.showMessageDialog(this,
                "Please enter cell no of 10 digits",
                "Try Again",
                JOptionPane.ERROR_MESSAGE);

        }
        else if (!(Pattern.matches("^[a-zA-Z0-9]+[@]{1}+[a-zA-Z0-9]+[.]{1}+[a-zA-Z0-9]+$", emailhosp)))
        {
            JOptionPane.showMessageDialog(null,
                "Please enter a valid email",
                "Error",
                JOptionPane.ERROR_MESSAGE);
        }
        else{
            Hospital hd = HospDirectory.addNewHospital();
            hd.setHospitalName(hospname);
            hd.setHospitalID(hospID);
            hd.setPhoneNo(phoneNohosp);
            hd.setEmailAdd(emailhosp);
            JOptionPane.showMessageDialog(this, "New record added");

            jHospID.setText("");
            jNameHosp.setText("");
            jPhoneNoHosp.setText("");
            jEmailHosp.setText("");

        
//        
//        String fname = tfFnameDoc.getText();
//        String lname = tfLnameDoc.getText();
//        int age = Integer.parseInt(tfAgeDoc.getText());
//        String gender = cbGenderDoc.getSelectedItem().toString();
//        Date dob = dobDoc.getDate();
//        String add = tfAddDoc.getText();
//        String city = tfCityDoc.getText();
//        String country = tfCountryDoc.getText();
//        String community = tfCommunityDoc.getText();
//        String docID = tfDocID.getText();
//        String department = cbDept.getSelectedItem().toString();
//        String bloodgroup = tfBloodgrpDoc.getText();
//        String phoneNo = tfPhoneNoDoc.getText();
//        int length = phoneNo.length();
//        Date doj = dojDoc.getDate();
//        //Date dob = dobDoc.getDate();
//        String email = tfEmailDoc.getText();
//        String pincode = tfPincodeDoc.getText();
//
//        if (gender.isEmpty() || /*dob.isEmpty() || */ fname.isEmpty() || lname.isEmpty() || /*age.isEmpty()||*/   add.isEmpty()
//            || city.isEmpty() || country.isEmpty() || docID.isEmpty() || department.isEmpty() || bloodgroup.isEmpty() ||
//            /*  phoneNo.isEmpty() ||  doj.isEmpty() ||*/ email.isEmpty() || pincode.isEmpty()) {
//            JOptionPane.showMessageDialog(this,
//                "Invalid! Kindly enter data in all fields!",
//                "Try Again",
//                JOptionPane.ERROR_MESSAGE);
//        }
//        else if (!(Pattern.matches("^[a-zA-Z0-9] +[@]{1} +[a-zA-Z0-9]+[.]{1} +[a-zA-Z0-9]+$^", email)))
//        {
//            JOptionPane.showMessageDialog(null,
//                "Kindly enter a valid Email!",
//                "Invalid!",
//                JOptionPane.ERROR_MESSAGE);
//
//        }
//
//        else {
//            Doctor dd = DocDirectory.addNewDoctor();
//            dd.setfName(fname);
//            dd.setlName(lname);
//            dd.setDoctorID(docID);
//            dd.setDepartment(department);
//            //dd.setJoiningDate(doj);
//            dd.setBloodgroup(bloodgroup);
//            dd.setGender(gender);
//            dd.setAge(age);
//            dd.setPhoneNo(phoneNo);
//
//            House docHouse = new House();
//            docHouse.setStreetadd(add);
//            dd.setHouse(docHouse);
//
//            City docCity = new City();
//            docCity.setCity(city);
//            dd.setCity(docCity);
//
//            Community docCommunity = new Community();
//            docCommunity.setCommunityName(community);
//            dd.setCommunity(docCommunity);
//
//            Community docpincode =  new Community();
//            docpincode.setPincode(pincode);
//            dd.setPincode(docpincode);
//
//            City docCountry = new City();
//            docCountry.setCountry(country);
//            dd.setCountry(docCountry);
//
//            dd.setDateOfBirth(dob);
//            dd.setJoiningDate(doj);
//            dd.setEmailAddress(email);
//
//            JOptionPane.showMessageDialog(this, "New Record added!");
//
//            tfFnameDoc.setText("");
//            tfLnameDoc.setText("");
//            tfAgeDoc.setText("");
//            tfBloodgrpDoc.setText("");
//            tfAddDoc.setText("");
//            tfCityDoc.setText("");
//            tfCommunityDoc.setText("");
//            tfCountryDoc.setText("");
//            tfDocID.setText("");
//            tfEmailDoc.setText("");
//            tfPhoneNoDoc.setText("");
//            tfPincodeDoc.setText("");
//            cbGenderDoc.setSelectedIndex(0);
//            cbDept.setSelectedIndex(0);

        }

    }//GEN-LAST:event_jSaveHospButtonMouseClicked

    private void jSaveHospButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jSaveHospButtonActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_jSaveHospButtonActionPerformed

    private void jBackAddDoctorButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBackAddDoctorButtonActionPerformed
        // TODO add your handling code here:
        HospitalDetailsAdmin HDA = new HospitalDetailsAdmin(DocDirectory, HospDirectory, PatDirectory);
        HDA.setVisible(true);
        this.dispose();
        
    }//GEN-LAST:event_jBackAddDoctorButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AHospDetails.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AHospDetails.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AHospDetails.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AHospDetails.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AHospDetails().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBackAddDoctorButton;
    private javax.swing.JTextField jEmailHosp;
    private javax.swing.JTextField jHospID;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JTextField jNameHosp;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField jPhoneNoHosp;
    private javax.swing.JButton jSaveHospButton;
    // End of variables declaration//GEN-END:variables
}
